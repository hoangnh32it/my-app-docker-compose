version: "3.8"

services:
  db:
    image: postgres:14
    container_name: postgres-db
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: productsdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - backend-net

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: my-backend-app:latest
    container_name: my-backend-app
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/productsdb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    networks:
      - backend-net

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: my-frontend-app:latest
    container_name: my-frontend-app
    ports:
      - "3000:80" # port host:container
    depends_on:
      - backend
    networks:
      - backend-net

networks:
  backend-net:
